services:
  gitlab:
    image: gitlab/gitlab-ce:17.10.0-ce.0
    container_name: gitlab
    restart: unless-stopped
    environment:
      GITLAB_OMNIBUS_CONFIG: |    # gitlab의 설정값 (gitlab.rb 설정파일의 내용에 해당)
        external_url 'http://${GITLAB_HOST_IP}:8080'       # gitlab URL
        nginx['listen_port'] = 80           # 컨테이너 안쪽 nginx가 listen 할 포트
        nginx['listen_https'] = false       # https 사용 여부
        nginx['listen_address'] = '0.0.0.0'
        nginx['enable'] = true
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_SSH_PORT} # SSH 접속시 사용할 포트
        # gitlab_rails['gitlab_port'] = ${GITLAB_HTTP_PORT}  # gitlab 포트 (외부)
        gitlab_rails['allow_local_requests_from_web_hooks_and_services'] = true # 동일 로컬 네트워크대의 웹훅이나 서비스를 바라볼 수 있도록 허용
        gitlab_rails['gitlab_default_projects_features_container_registry'] = true # gitlab 에서 container(docker) registry 활성화
        registry_external_url '${GITLAB_HOST_IP}:${GITLAB_CONTAINER_REGISTRY_PORT}' # container registry 외부 접속 경로 지정
      GITLAB_ROOT_EMAIL: ${GITLAB_ROOT_EMAIL}        # 관리자 계정
      GITLAB_ROOT_PASSWORD: ${GITLAB_ROOT_PASSWORD}  # 관리자 초기 비밀번호
    ports:
      - '${GITLAB_HTTP_PORT:-8080}:80'
      - '${GITLAB_HTTPS_PORT:-8443}:443'
      - '${GITLAB_SSH_PORT:-2424}:22'    # gitlab_rails와 동일하게 설정
    volumes: # 볼륨마운트 : 호스트 폴더($GITLAB_HOME)는 상황에 맞춰 설정
      - '${GLOBAL_DATA_MOUNT_POINT}${GITLAB_DATA_MOUNT_POINT}/config:/etc/gitlab'
      - '${GLOBAL_DATA_MOUNT_POINT}${GITLAB_DATA_MOUNT_POINT}/logs:/var/log/gitlab'
      - '${GLOBAL_DATA_MOUNT_POINT}${GITLAB_DATA_MOUNT_POINT}/data:/var/opt/gitlab'
      - '${GLOBAL_DATA_MOUNT_POINT}${SHARED_DIR_MOUNT_POINT}:${SHARED_DIR_MOUNT_POINT}'
    shm_size: '256m'
